name: Update Magazines Data

on:
  schedule:
    # Run daily at midnight UTC
    - cron: '0 0 * * *'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  update-magazines:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-api-python-client google-auth-httplib2 google-auth-oauthlib
        
    - name: Set up Google credentials
      run: |
        # Create temporary files that will be used by the script
        echo "${{ secrets.GOOGLE_CREDENTIALS }}" > credentials.json
        echo "${{ secrets.GOOGLE_TOKEN }}" > token.json
        
    - name: Run magazine fetch script
      run: |
        echo "Fetching magazine data from Google Drive..."
        python scripts/fetch_magazines.py
        
    - name: Update token in GitHub secrets (if refreshed)
      if: success()
      env:
        GH_TOKEN: ${{ secrets.REPO_TOKEN }}
        REPO: ${{ github.repository }}
      run: |
        # Check if token file exists and is different from the original
        if [ -f token.json ]; then
          NEW_TOKEN=$(cat token.json)
          OLD_TOKEN='${{ secrets.GOOGLE_TOKEN }}'
          
          # Only update if the token has changed
          if [ "$NEW_TOKEN" != "$OLD_TOKEN" ]; then
            echo "Token was refreshed, updating GitHub secret..."
            
            # This requires a PAT with repo scope to update secrets
            # REPO_TOKEN should be a Personal Access Token with the 'repo' scope
            curl -X PUT \
              -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$REPO/actions/secrets/GOOGLE_TOKEN \
              -d "{\"encrypted_value\":\"$(echo -n "$NEW_TOKEN" | base64)\", \"key_id\":\"$(curl -s -H "Authorization: token $GH_TOKEN" https://api.github.com/repos/$REPO/actions/secrets/public-key | jq -r .key_id)\"}"
            
            echo "GitHub secret updated!"
          else
            echo "Token has not changed, no need to update GitHub secret."
          fi
        else
          echo "Token file not found, can't update GitHub secret."
        fi
        
    - name: Clean up credentials
      run: |
        # Remove sensitive files before committing
        rm -f credentials.json token.json
        
    - name: Commit and push if changed
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add data/magazines/
        git add data/magazines/pdfs/
        git commit -m "Update magazine data" || exit 0
        git push